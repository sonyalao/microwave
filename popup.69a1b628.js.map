{"version":3,"sources":["popup.js"],"names":["ol","Overlay","Popup","opt_options","options","panMapIfOutOfView","undefined","ani","animation","pan","ani_opts","container","document","createElement","className","closer","href","appendChild","that","addEventListener","evt","style","display","blur","preventDefault","content","call","element","stopEvent","inherits","prototype","show","coord","html","setPosition","innerHTML","window","setTimeout","scrollTop","panIntoView_","popSize","getElement","clientWidth","clientHeight","mapSize","getMap","getSize","tailOffsetRight","popOffset","getOffset","popPx","getPixelFromCoordinate","fromLeft","fromRight","fromTop","fromBottom","center","getView","getCenter","px","source","beforeRender","setCenter","getCoordinateFromPixel","hide"],"mappings":";AAUAA,GAAGC,QAAQC,MAAQ,SAASC,GAEpBC,IAAAA,EAAUD,GAAe,GAExBE,KAAAA,kBAAoBD,EAAQC,uBACFC,IAA3B,KAAKD,oBACAA,KAAAA,mBAAoB,GAGxBE,KAAAA,IAAMH,EAAQG,SACFD,IAAb,KAAKC,MACAA,KAAAA,IAAMP,GAAGQ,UAAUC,KAGvBC,KAAAA,SAAWN,EAAQM,cACFJ,IAAlB,KAAKI,WACAA,KAAAA,SAAW,CAAa,SAAA,MAG5BC,KAAAA,UAAYC,SAASC,cAAc,OACnCF,KAAAA,UAAUG,UAAY,WAEtBC,KAAAA,OAASH,SAASC,cAAc,KAChCE,KAAAA,OAAOD,UAAY,kBACnBC,KAAAA,OAAOC,KAAO,IACdL,KAAAA,UAAUM,YAAY,KAAKF,QAE5BG,IAAAA,EAAO,KACNH,KAAAA,OAAOI,iBAAiB,QAAS,SAASC,GAC3CF,EAAKP,UAAUU,MAAMC,QAAU,OAC/BJ,EAAKH,OAAOQ,OACZH,EAAII,mBACL,GAEEC,KAAAA,QAAUb,SAASC,cAAc,OACjCY,KAAAA,QAAQX,UAAY,mBACpBH,KAAAA,UAAUM,YAAY,KAAKQ,SAEhCzB,GAAGC,QAAQyB,KAAK,KAAM,CAClBC,QAAS,KAAKhB,UACdiB,WAAW,KAKnB5B,GAAG6B,SAAS7B,GAAGC,QAAQC,MAAOF,GAAGC,SAOjCD,GAAGC,QAAQC,MAAM4B,UAAUC,KAAO,SAASC,EAAOC,GACzCC,KAAAA,YAAYF,GACZP,KAAAA,QAAQU,UAAYF,EACpBtB,KAAAA,UAAUU,MAAMC,QAAU,QAE3BG,IAAAA,EAAU,KAAKA,QAQZ,OAPPW,OAAOC,WAAW,WACdZ,EAAQa,UAAY,GACrB,KAEC,KAAKjC,mBACAkC,KAAAA,aAAaP,GAEf,MAMXhC,GAAGC,QAAQC,MAAM4B,UAAUS,aAAe,SAASP,GAE3CQ,IAAAA,EACW,KAAKC,aAAaC,YAAc,GAD3CF,EAEY,KAAKC,aAAaE,aAAe,GAE7CC,EAAU,KAAKC,SAASC,UAIxBC,EAAkBP,EADD,GAEjBQ,EAAY,KAAKC,YACjBC,EAAQ,KAAKL,SAASM,uBAAuBnB,GAE7CoB,EAAYF,EAAM,GALD,GAMjBG,EAAYT,EAAQ,IAAMM,EAAM,GAAKH,GAErCO,EAAUJ,EAAM,GAAKV,EAAiBQ,EAAU,GAChDO,EAAaX,EAAQ,IAAMM,EAAM,GAVpB,IAUuCF,EAAU,GAE9DQ,EAAS,KAAKX,SAASY,UAAUC,YACjCC,EAAK,KAAKd,SAASM,uBAAuBK,GAqBvC,OAnBHH,EAAY,EACZM,EAAG,IAAMN,EACFD,EAAW,IAClBO,EAAG,IAAMP,GAGTE,EAAU,EAEVK,EAAG,IAAML,EACFC,EAAa,IACpBI,EAAG,IAAMJ,GAGT,KAAKhD,KAAO,KAAKG,WACZA,KAAAA,SAASkD,OAASJ,EAClBX,KAAAA,SAASgB,aAAa,KAAKtD,IAAI,KAAKG,YAExCmC,KAAAA,SAASY,UAAUK,UAAU,KAAKjB,SAASkB,uBAAuBJ,IAEhE,KAAKd,SAASY,UAAUC,aAOnC1D,GAAGC,QAAQC,MAAM4B,UAAUkC,KAAO,WAEvB,OADFrD,KAAAA,UAAUU,MAAMC,QAAU,OACxB","file":"popup.69a1b628.js","sourceRoot":"..","sourcesContent":[" /**\r\n * OpenLayers 3 Popup Overlay.\r\n * See [the examples](./examples) for usage. Styling can be done via CSS.\r\n * @constructor\r\n * @extends {ol.Overlay}\r\n * @param {Object} opt_options Overlay options, extends olx.OverlayOptions adding:\r\n *                              **`panMapIfOutOfView`** `Boolean` - Should the\r\n *                              map be panned so that the popup is entirely\r\n *                              within view.\r\n */\r\nol.Overlay.Popup = function(opt_options) {\r\n\r\n    var options = opt_options || {};\r\n\r\n    this.panMapIfOutOfView = options.panMapIfOutOfView;\r\n    if (this.panMapIfOutOfView === undefined) {\r\n        this.panMapIfOutOfView = true;\r\n    }\r\n\r\n    this.ani = options.ani;\r\n    if (this.ani === undefined) {\r\n        this.ani = ol.animation.pan;\r\n    }\r\n\r\n    this.ani_opts = options.ani_opts;\r\n    if (this.ani_opts === undefined) {\r\n        this.ani_opts = {'duration': 250};\r\n    }\r\n\r\n    this.container = document.createElement('div');\r\n    this.container.className = 'ol-popup';\r\n\r\n    this.closer = document.createElement('a');\r\n    this.closer.className = 'ol-popup-closer';\r\n    this.closer.href = '#';\r\n    this.container.appendChild(this.closer);\r\n\r\n    var that = this;\r\n    this.closer.addEventListener('click', function(evt) {\r\n        that.container.style.display = 'none';\r\n        that.closer.blur();\r\n        evt.preventDefault();\r\n    }, false);\r\n\r\n    this.content = document.createElement('div');\r\n    this.content.className = 'ol-popup-content';\r\n    this.container.appendChild(this.content);\r\n\r\n    ol.Overlay.call(this, {\r\n        element: this.container,\r\n        stopEvent: true\r\n    });\r\n\r\n};\r\n\r\nol.inherits(ol.Overlay.Popup, ol.Overlay);\r\n\r\n/**\r\n * Show the popup.\r\n * @param {ol.Coordinate} coord Where to anchor the popup.\r\n * @param {String} html String of HTML to display within the popup.\r\n */\r\nol.Overlay.Popup.prototype.show = function(coord, html) {\r\n    this.setPosition(coord);\r\n    this.content.innerHTML = html;\r\n    this.container.style.display = 'block';\r\n\r\n    var content = this.content;\r\n    window.setTimeout(function(){\r\n        content.scrollTop = 0;\r\n    }, 100);\r\n    \r\n    if (this.panMapIfOutOfView) {\r\n        this.panIntoView_(coord);\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nol.Overlay.Popup.prototype.panIntoView_ = function(coord) {\r\n\r\n    var popSize = {\r\n            width: this.getElement().clientWidth + 20,\r\n            height: this.getElement().clientHeight + 20\r\n        },\r\n        mapSize = this.getMap().getSize();\r\n\r\n    var tailHeight = 20,\r\n        tailOffsetLeft = 60,\r\n        tailOffsetRight = popSize.width - tailOffsetLeft,\r\n        popOffset = this.getOffset(),\r\n        popPx = this.getMap().getPixelFromCoordinate(coord);\r\n\r\n    var fromLeft = (popPx[0] - tailOffsetLeft),\r\n        fromRight = mapSize[0] - (popPx[0] + tailOffsetRight);\r\n\r\n    var fromTop = popPx[1] - popSize.height + popOffset[1],\r\n        fromBottom = mapSize[1] - (popPx[1] + tailHeight) - popOffset[1];\r\n\r\n    var center = this.getMap().getView().getCenter(),\r\n        px = this.getMap().getPixelFromCoordinate(center);\r\n\r\n    if (fromRight < 0) {\r\n        px[0] -= fromRight;\r\n    } else if (fromLeft < 0) {\r\n        px[0] += fromLeft;\r\n    }\r\n    \r\n    if (fromTop < 0) {\r\n        //px[1] = 170 + fromTop;\r\n        px[1] += fromTop; //original\r\n    } else if (fromBottom < 0) {\r\n        px[1] -= fromBottom;\r\n    }\r\n\r\n    if (this.ani && this.ani_opts) {\r\n        this.ani_opts.source = center;\r\n        this.getMap().beforeRender(this.ani(this.ani_opts));\r\n    }\r\n    this.getMap().getView().setCenter(this.getMap().getCoordinateFromPixel(px));\r\n\r\n    return this.getMap().getView().getCenter();\r\n\r\n};\r\n\r\n/**\r\n * Hide the popup.\r\n */\r\nol.Overlay.Popup.prototype.hide = function() {\r\n    this.container.style.display = 'none';\r\n    return this;\r\n};\r\n"]}